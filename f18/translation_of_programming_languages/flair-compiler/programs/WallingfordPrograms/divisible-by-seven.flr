program IsPrime(n : integer);



   function  divisibleBy( n : integer, divisor : integer ) : boolean
   begin
  	return divisibleByParts( n / 10 , MOD(n, 10) )

   end;

   function divisibleByParts( left : integer, right : integer, divisor : integer ) : boolean

   begin

      return divisibleByDifference( left - right * 2, divisor )

   end;



   function divisibleByDifference( diff : integer, divisor : integer, divisor : integer ) : boolean

   begin

      return if ((diff = divisor) or (diff = 0) or (diff = 0 - divisor) or (diff = 0 - divisor*2))

                then true

                else if diff < 14

                        then false

                        else divisibleByParts( diff / 10 , MOD(diff, 10) )

   end;



   function MOD( m : integer, n : integer ) : integer

   begin

      return m - m/n * n

   end;

   function isPrime( n : integer , divisor : integer ) : boolean
   begin
	   return if divisibleBy( n, divisor) then 0
	   else if divisor = 2 then false else isPrime( n, divisor-1)
   end;



begin

   return if isPrime(n, n) then 1 else 0
end.
